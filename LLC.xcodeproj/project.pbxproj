// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"LLC::LLCPackageTests::ProductTarget" /* LLCPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_186 /* Build configuration list for PBXAggregateTarget "LLCPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_189 /* PBXTargetDependency */,
			);
			name = LLCPackageTests;
			productName = LLCPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_100 /* PathKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "PathKit::PathKit::Product" /* PathKit.framework */; };
		OBJ_101 /* LLVM.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::LLVM::Product" /* LLVM.framework */; };
		OBJ_113 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* main.swift */; };
		OBJ_115 /* Lib.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLC::Lib::Product" /* Lib.framework */; };
		OBJ_116 /* PathKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "PathKit::PathKit::Product" /* PathKit.framework */; };
		OBJ_117 /* LLVM.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::LLVM::Product" /* LLVM.framework */; };
		OBJ_125 /* AST.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* AST.swift */; };
		OBJ_126 /* CodeGen.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CodeGen.swift */; };
		OBJ_127 /* MMU.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* MMU.swift */; };
		OBJ_128 /* Parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Parser.swift */; };
		OBJ_129 /* Queue.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* Queue.swift */; };
		OBJ_130 /* Util.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Util.swift */; };
		OBJ_132 /* PathKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "PathKit::PathKit::Product" /* PathKit.framework */; };
		OBJ_133 /* LLVM.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::LLVM::Product" /* LLVM.framework */; };
		OBJ_140 /* PathKit.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* PathKit.swift */; };
		OBJ_146 /* Alias.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Alias.swift */; };
		OBJ_147 /* ArrayType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* ArrayType.swift */; };
		OBJ_148 /* BasicBlock.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* BasicBlock.swift */; };
		OBJ_149 /* Call.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* Call.swift */; };
		OBJ_150 /* Clause.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* Clause.swift */; };
		OBJ_151 /* Constant.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* Constant.swift */; };
		OBJ_152 /* FloatType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* FloatType.swift */; };
		OBJ_153 /* Function.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* Function.swift */; };
		OBJ_154 /* FunctionType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* FunctionType.swift */; };
		OBJ_155 /* Global.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* Global.swift */; };
		OBJ_156 /* IRBuilder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* IRBuilder.swift */; };
		OBJ_157 /* IRGlobal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* IRGlobal.swift */; };
		OBJ_158 /* IRType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* IRType.swift */; };
		OBJ_159 /* IRValue+Kinds.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* IRValue+Kinds.swift */; };
		OBJ_160 /* IRValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* IRValue.swift */; };
		OBJ_161 /* Initialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* Initialization.swift */; };
		OBJ_162 /* Instruction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* Instruction.swift */; };
		OBJ_163 /* IntType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* IntType.swift */; };
		OBJ_164 /* JIT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* JIT.swift */; };
		OBJ_165 /* LabelType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* LabelType.swift */; };
		OBJ_166 /* Linkage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* Linkage.swift */; };
		OBJ_167 /* MemoryBuffer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* MemoryBuffer.swift */; };
		OBJ_168 /* MetadataType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* MetadataType.swift */; };
		OBJ_169 /* Module.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* Module.swift */; };
		OBJ_170 /* ObjectFile.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* ObjectFile.swift */; };
		OBJ_171 /* OpCode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* OpCode.swift */; };
		OBJ_172 /* PassManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* PassManager.swift */; };
		OBJ_173 /* PhiNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* PhiNode.swift */; };
		OBJ_174 /* PointerType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_56 /* PointerType.swift */; };
		OBJ_175 /* StructType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_57 /* StructType.swift */; };
		OBJ_176 /* Switch.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* Switch.swift */; };
		OBJ_177 /* TargetData.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* TargetData.swift */; };
		OBJ_178 /* TargetMachine.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* TargetMachine.swift */; };
		OBJ_179 /* TokenType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* TokenType.swift */; };
		OBJ_180 /* Use.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* Use.swift */; };
		OBJ_181 /* VectorType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* VectorType.swift */; };
		OBJ_182 /* VoidType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* VoidType.swift */; };
		OBJ_183 /* X86MMXType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* X86MMXType.swift */; };
		OBJ_78 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_84 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* Package.swift */; };
		OBJ_90 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* Package.swift */; };
		OBJ_96 /* Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Extension.swift */; };
		OBJ_97 /* ParserTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* ParserTest.swift */; };
		OBJ_99 /* Lib.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLC::Lib::Product" /* Lib.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		C3762A2D1FA3D99E00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLC::Lib";
			remoteInfo = Lib;
		};
		C3762A2E1FA3D99E00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "PathKit::PathKit";
			remoteInfo = PathKit;
		};
		C3762A2F1FA3D99E00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::LLVM";
			remoteInfo = LLVM;
		};
		C3762A301FA3D99E00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "PathKit::PathKit";
			remoteInfo = PathKit;
		};
		C3762A311FA3D99E00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::LLVM";
			remoteInfo = LLVM;
		};
		C3762A321FA3D99F00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLC::Lib";
			remoteInfo = Lib;
		};
		C3762A331FA3D99F00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "PathKit::PathKit";
			remoteInfo = PathKit;
		};
		C3762A341FA3D99F00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::LLVM";
			remoteInfo = LLVM;
		};
		C3762A351FA3D99F00DC442D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLC::LibTests";
			remoteInfo = LibTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"LLC::Lib::Product" /* Lib.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Lib.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"LLC::LibTests::Product" /* LibTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = LibTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"LLC::lolc::Product" /* lolc */ = {isa = PBXFileReference; lastKnownFileType = text; path = lolc; sourceTree = BUILT_PRODUCTS_DIR; };
		"LLVM::LLVM::Product" /* LLVM.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LLVM.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* CodeGen.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CodeGen.swift; sourceTree = "<group>"; };
		OBJ_11 /* MMU.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MMU.swift; sourceTree = "<group>"; };
		OBJ_12 /* Parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Parser.swift; sourceTree = "<group>"; };
		OBJ_13 /* Queue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Queue.swift; sourceTree = "<group>"; };
		OBJ_14 /* Util.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Util.swift; sourceTree = "<group>"; };
		OBJ_16 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_19 /* Extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Extension.swift; sourceTree = "<group>"; };
		OBJ_20 /* ParserTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ParserTest.swift; sourceTree = "<group>"; };
		OBJ_21 /* utils */ = {isa = PBXFileReference; lastKnownFileType = folder; path = utils; sourceTree = SOURCE_ROOT; };
		OBJ_24 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/Administrator/Documents/Informatik/Lolang/lolc/.build/checkouts/PathKit--9185519632264250829/Package.swift"; sourceTree = "<group>"; };
		OBJ_25 /* PathKit.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PathKit.swift; sourceTree = "<group>"; };
		OBJ_28 /* Alias.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Alias.swift; sourceTree = "<group>"; };
		OBJ_29 /* ArrayType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrayType.swift; sourceTree = "<group>"; };
		OBJ_30 /* BasicBlock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BasicBlock.swift; sourceTree = "<group>"; };
		OBJ_31 /* Call.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Call.swift; sourceTree = "<group>"; };
		OBJ_32 /* Clause.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Clause.swift; sourceTree = "<group>"; };
		OBJ_33 /* Constant.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Constant.swift; sourceTree = "<group>"; };
		OBJ_34 /* FloatType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FloatType.swift; sourceTree = "<group>"; };
		OBJ_35 /* Function.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function.swift; sourceTree = "<group>"; };
		OBJ_36 /* FunctionType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctionType.swift; sourceTree = "<group>"; };
		OBJ_37 /* Global.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Global.swift; sourceTree = "<group>"; };
		OBJ_38 /* IRBuilder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRBuilder.swift; sourceTree = "<group>"; };
		OBJ_39 /* IRGlobal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRGlobal.swift; sourceTree = "<group>"; };
		OBJ_40 /* IRType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRType.swift; sourceTree = "<group>"; };
		OBJ_41 /* IRValue+Kinds.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "IRValue+Kinds.swift"; sourceTree = "<group>"; };
		OBJ_42 /* IRValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRValue.swift; sourceTree = "<group>"; };
		OBJ_43 /* Initialization.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Initialization.swift; sourceTree = "<group>"; };
		OBJ_44 /* Instruction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Instruction.swift; sourceTree = "<group>"; };
		OBJ_45 /* IntType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntType.swift; sourceTree = "<group>"; };
		OBJ_46 /* JIT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JIT.swift; sourceTree = "<group>"; };
		OBJ_47 /* LabelType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LabelType.swift; sourceTree = "<group>"; };
		OBJ_48 /* Linkage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Linkage.swift; sourceTree = "<group>"; };
		OBJ_49 /* MemoryBuffer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MemoryBuffer.swift; sourceTree = "<group>"; };
		OBJ_50 /* MetadataType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MetadataType.swift; sourceTree = "<group>"; };
		OBJ_51 /* Module.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Module.swift; sourceTree = "<group>"; };
		OBJ_52 /* ObjectFile.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectFile.swift; sourceTree = "<group>"; };
		OBJ_53 /* OpCode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OpCode.swift; sourceTree = "<group>"; };
		OBJ_54 /* PassManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PassManager.swift; sourceTree = "<group>"; };
		OBJ_55 /* PhiNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PhiNode.swift; sourceTree = "<group>"; };
		OBJ_56 /* PointerType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PointerType.swift; sourceTree = "<group>"; };
		OBJ_57 /* StructType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StructType.swift; sourceTree = "<group>"; };
		OBJ_58 /* Switch.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Switch.swift; sourceTree = "<group>"; };
		OBJ_59 /* TargetData.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TargetData.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* TargetMachine.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TargetMachine.swift; sourceTree = "<group>"; };
		OBJ_61 /* TokenType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenType.swift; sourceTree = "<group>"; };
		OBJ_62 /* Use.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Use.swift; sourceTree = "<group>"; };
		OBJ_63 /* VectorType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VectorType.swift; sourceTree = "<group>"; };
		OBJ_64 /* VoidType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VoidType.swift; sourceTree = "<group>"; };
		OBJ_65 /* X86MMXType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = X86MMXType.swift; sourceTree = "<group>"; };
		OBJ_66 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/Administrator/Documents/Informatik/Lolang/lolc/.build/checkouts/LLVMSwift--660804890405565857/Package.swift"; sourceTree = "<group>"; };
		OBJ_9 /* AST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AST.swift; sourceTree = "<group>"; };
		"PathKit::PathKit::Product" /* PathKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = PathKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_114 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_115 /* Lib.framework in Frameworks */,
				OBJ_116 /* PathKit.framework in Frameworks */,
				OBJ_117 /* LLVM.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_131 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_132 /* PathKit.framework in Frameworks */,
				OBJ_133 /* LLVM.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_141 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_184 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_98 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_99 /* Lib.framework in Frameworks */,
				OBJ_100 /* PathKit.framework in Frameworks */,
				OBJ_101 /* LLVM.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_15 /* lolc */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* main.swift */,
			);
			name = lolc;
			path = Sources/lolc;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_17 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* LibTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* LibTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* Extension.swift */,
				OBJ_20 /* ParserTest.swift */,
			);
			name = LibTests;
			path = Tests/LibTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_22 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* PathKit */,
				OBJ_26 /* LLVM */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_23 /* PathKit */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* Package.swift */,
				OBJ_25 /* PathKit.swift */,
			);
			name = PathKit;
			path = ".build/checkouts/PathKit--9185519632264250829/Sources";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* LLVM */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* LLVM */,
				OBJ_66 /* Package.swift */,
			);
			name = LLVM;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_27 /* LLVM */ = {
			isa = PBXGroup;
			children = (
				OBJ_28 /* Alias.swift */,
				OBJ_29 /* ArrayType.swift */,
				OBJ_30 /* BasicBlock.swift */,
				OBJ_31 /* Call.swift */,
				OBJ_32 /* Clause.swift */,
				OBJ_33 /* Constant.swift */,
				OBJ_34 /* FloatType.swift */,
				OBJ_35 /* Function.swift */,
				OBJ_36 /* FunctionType.swift */,
				OBJ_37 /* Global.swift */,
				OBJ_38 /* IRBuilder.swift */,
				OBJ_39 /* IRGlobal.swift */,
				OBJ_40 /* IRType.swift */,
				OBJ_41 /* IRValue+Kinds.swift */,
				OBJ_42 /* IRValue.swift */,
				OBJ_43 /* Initialization.swift */,
				OBJ_44 /* Instruction.swift */,
				OBJ_45 /* IntType.swift */,
				OBJ_46 /* JIT.swift */,
				OBJ_47 /* LabelType.swift */,
				OBJ_48 /* Linkage.swift */,
				OBJ_49 /* MemoryBuffer.swift */,
				OBJ_50 /* MetadataType.swift */,
				OBJ_51 /* Module.swift */,
				OBJ_52 /* ObjectFile.swift */,
				OBJ_53 /* OpCode.swift */,
				OBJ_54 /* PassManager.swift */,
				OBJ_55 /* PhiNode.swift */,
				OBJ_56 /* PointerType.swift */,
				OBJ_57 /* StructType.swift */,
				OBJ_58 /* Switch.swift */,
				OBJ_59 /* TargetData.swift */,
				OBJ_60 /* TargetMachine.swift */,
				OBJ_61 /* TokenType.swift */,
				OBJ_62 /* Use.swift */,
				OBJ_63 /* VectorType.swift */,
				OBJ_64 /* VoidType.swift */,
				OBJ_65 /* X86MMXType.swift */,
			);
			name = LLVM;
			path = ".build/checkouts/LLVMSwift--660804890405565857/Sources/LLVM";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_17 /* Tests */,
				OBJ_21 /* utils */,
				OBJ_22 /* Dependencies */,
				OBJ_67 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_67 /* Products */ = {
			isa = PBXGroup;
			children = (
				"LLC::LibTests::Product" /* LibTests.xctest */,
				"LLC::lolc::Product" /* lolc */,
				"LLC::Lib::Product" /* Lib.framework */,
				"PathKit::PathKit::Product" /* PathKit.framework */,
				"LLVM::LLVM::Product" /* LLVM.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Lib */,
				OBJ_15 /* lolc */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Lib */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* AST.swift */,
				OBJ_10 /* CodeGen.swift */,
				OBJ_11 /* MMU.swift */,
				OBJ_12 /* Parser.swift */,
				OBJ_13 /* Queue.swift */,
				OBJ_14 /* Util.swift */,
			);
			name = Lib;
			path = Sources/Lib;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"LLC::Lib" /* Lib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_121 /* Build configuration list for PBXNativeTarget "Lib" */;
			buildPhases = (
				OBJ_124 /* Sources */,
				OBJ_131 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_134 /* PBXTargetDependency */,
				OBJ_135 /* PBXTargetDependency */,
			);
			name = Lib;
			productName = Lib;
			productReference = "LLC::Lib::Product" /* Lib.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LLC::LibTests" /* LibTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_92 /* Build configuration list for PBXNativeTarget "LibTests" */;
			buildPhases = (
				OBJ_95 /* Sources */,
				OBJ_98 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_102 /* PBXTargetDependency */,
				OBJ_104 /* PBXTargetDependency */,
				OBJ_106 /* PBXTargetDependency */,
			);
			name = LibTests;
			productName = LibTests;
			productReference = "LLC::LibTests::Product" /* LibTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"LLC::SwiftPMPackageDescription" /* LLCPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_74 /* Build configuration list for PBXNativeTarget "LLCPackageDescription" */;
			buildPhases = (
				OBJ_77 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LLCPackageDescription;
			productName = LLCPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"LLC::lolc" /* lolc */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_109 /* Build configuration list for PBXNativeTarget "lolc" */;
			buildPhases = (
				OBJ_112 /* Sources */,
				OBJ_114 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_118 /* PBXTargetDependency */,
				OBJ_119 /* PBXTargetDependency */,
				OBJ_120 /* PBXTargetDependency */,
			);
			name = lolc;
			productName = lolc;
			productReference = "LLC::lolc::Product" /* lolc */;
			productType = "com.apple.product-type.tool";
		};
		"LLVM::LLVM" /* LLVM */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_142 /* Build configuration list for PBXNativeTarget "LLVM" */;
			buildPhases = (
				OBJ_145 /* Sources */,
				OBJ_184 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LLVM;
			productName = LLVM;
			productReference = "LLVM::LLVM::Product" /* LLVM.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LLVM::SwiftPMPackageDescription" /* LLVMPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_86 /* Build configuration list for PBXNativeTarget "LLVMPackageDescription" */;
			buildPhases = (
				OBJ_89 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LLVMPackageDescription;
			productName = LLVMPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"PathKit::PathKit" /* PathKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_136 /* Build configuration list for PBXNativeTarget "PathKit" */;
			buildPhases = (
				OBJ_139 /* Sources */,
				OBJ_141 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = PathKit;
			productName = PathKit;
			productReference = "PathKit::PathKit::Product" /* PathKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		"PathKit::SwiftPMPackageDescription" /* PathKitPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_80 /* Build configuration list for PBXNativeTarget "PathKitPackageDescription" */;
			buildPhases = (
				OBJ_83 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = PathKitPackageDescription;
			productName = PathKitPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "LLC" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_67 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"LLC::SwiftPMPackageDescription" /* LLCPackageDescription */,
				"PathKit::SwiftPMPackageDescription" /* PathKitPackageDescription */,
				"LLVM::SwiftPMPackageDescription" /* LLVMPackageDescription */,
				"LLC::LibTests" /* LibTests */,
				"LLC::lolc" /* lolc */,
				"LLC::Lib" /* Lib */,
				"PathKit::PathKit" /* PathKit */,
				"LLVM::LLVM" /* LLVM */,
				"LLC::LLCPackageTests::ProductTarget" /* LLCPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_112 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_113 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_124 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_125 /* AST.swift in Sources */,
				OBJ_126 /* CodeGen.swift in Sources */,
				OBJ_127 /* MMU.swift in Sources */,
				OBJ_128 /* Parser.swift in Sources */,
				OBJ_129 /* Queue.swift in Sources */,
				OBJ_130 /* Util.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_139 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_140 /* PathKit.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_145 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_146 /* Alias.swift in Sources */,
				OBJ_147 /* ArrayType.swift in Sources */,
				OBJ_148 /* BasicBlock.swift in Sources */,
				OBJ_149 /* Call.swift in Sources */,
				OBJ_150 /* Clause.swift in Sources */,
				OBJ_151 /* Constant.swift in Sources */,
				OBJ_152 /* FloatType.swift in Sources */,
				OBJ_153 /* Function.swift in Sources */,
				OBJ_154 /* FunctionType.swift in Sources */,
				OBJ_155 /* Global.swift in Sources */,
				OBJ_156 /* IRBuilder.swift in Sources */,
				OBJ_157 /* IRGlobal.swift in Sources */,
				OBJ_158 /* IRType.swift in Sources */,
				OBJ_159 /* IRValue+Kinds.swift in Sources */,
				OBJ_160 /* IRValue.swift in Sources */,
				OBJ_161 /* Initialization.swift in Sources */,
				OBJ_162 /* Instruction.swift in Sources */,
				OBJ_163 /* IntType.swift in Sources */,
				OBJ_164 /* JIT.swift in Sources */,
				OBJ_165 /* LabelType.swift in Sources */,
				OBJ_166 /* Linkage.swift in Sources */,
				OBJ_167 /* MemoryBuffer.swift in Sources */,
				OBJ_168 /* MetadataType.swift in Sources */,
				OBJ_169 /* Module.swift in Sources */,
				OBJ_170 /* ObjectFile.swift in Sources */,
				OBJ_171 /* OpCode.swift in Sources */,
				OBJ_172 /* PassManager.swift in Sources */,
				OBJ_173 /* PhiNode.swift in Sources */,
				OBJ_174 /* PointerType.swift in Sources */,
				OBJ_175 /* StructType.swift in Sources */,
				OBJ_176 /* Switch.swift in Sources */,
				OBJ_177 /* TargetData.swift in Sources */,
				OBJ_178 /* TargetMachine.swift in Sources */,
				OBJ_179 /* TokenType.swift in Sources */,
				OBJ_180 /* Use.swift in Sources */,
				OBJ_181 /* VectorType.swift in Sources */,
				OBJ_182 /* VoidType.swift in Sources */,
				OBJ_183 /* X86MMXType.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_77 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_78 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_83 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_84 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_89 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_90 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_95 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_96 /* Extension.swift in Sources */,
				OBJ_97 /* ParserTest.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_102 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLC::Lib" /* Lib */;
			targetProxy = C3762A321FA3D99F00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_104 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "PathKit::PathKit" /* PathKit */;
			targetProxy = C3762A331FA3D99F00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_106 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::LLVM" /* LLVM */;
			targetProxy = C3762A341FA3D99F00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_118 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLC::Lib" /* Lib */;
			targetProxy = C3762A2D1FA3D99E00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_119 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "PathKit::PathKit" /* PathKit */;
			targetProxy = C3762A301FA3D99E00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_120 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::LLVM" /* LLVM */;
			targetProxy = C3762A311FA3D99E00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_134 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "PathKit::PathKit" /* PathKit */;
			targetProxy = C3762A2E1FA3D99E00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_135 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::LLVM" /* LLVM */;
			targetProxy = C3762A2F1FA3D99E00DC442D /* PBXContainerItemProxy */;
		};
		OBJ_189 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLC::LibTests" /* LibTests */;
			targetProxy = C3762A351FA3D99F00DC442D /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_110 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/lolc_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = lolc;
			};
			name = Debug;
		};
		OBJ_111 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/lolc_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = lolc;
			};
			name = Release;
		};
		OBJ_122 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/Lib_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = Lib;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Lib;
			};
			name = Debug;
		};
		OBJ_123 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/Lib_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = Lib;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Lib;
			};
			name = Release;
		};
		OBJ_137 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LLC.xcodeproj/PathKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = PathKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = PathKit;
			};
			name = Debug;
		};
		OBJ_138 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LLC.xcodeproj/PathKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = PathKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = PathKit;
			};
			name = Release;
		};
		OBJ_143 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/LLVM_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = LLVM;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LLVM;
			};
			name = Debug;
		};
		OBJ_144 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/LLVM_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = LLVM;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LLVM;
			};
			name = Release;
		};
		OBJ_187 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_188 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_75 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_76 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_81 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_82 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_87 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_88 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_93 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/LibTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LibTests;
			};
			name = Debug;
		};
		OBJ_94 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/cllvm.git-2027423941697803239",
				);
				INFOPLIST_FILE = LLC.xcodeproj/LibTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/5.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMMIRParser",
					"-lLLVMCoverage",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMBitWriter",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lcurses",
					"-lz",
					"-lm",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/5.0.0/include";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LibTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_109 /* Build configuration list for PBXNativeTarget "lolc" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_110 /* Debug */,
				OBJ_111 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_121 /* Build configuration list for PBXNativeTarget "Lib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_122 /* Debug */,
				OBJ_123 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_136 /* Build configuration list for PBXNativeTarget "PathKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_137 /* Debug */,
				OBJ_138 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_142 /* Build configuration list for PBXNativeTarget "LLVM" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_143 /* Debug */,
				OBJ_144 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_186 /* Build configuration list for PBXAggregateTarget "LLCPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_187 /* Debug */,
				OBJ_188 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "LLC" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_74 /* Build configuration list for PBXNativeTarget "LLCPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_75 /* Debug */,
				OBJ_76 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_80 /* Build configuration list for PBXNativeTarget "PathKitPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_81 /* Debug */,
				OBJ_82 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_86 /* Build configuration list for PBXNativeTarget "LLVMPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_87 /* Debug */,
				OBJ_88 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_92 /* Build configuration list for PBXNativeTarget "LibTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_93 /* Debug */,
				OBJ_94 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
